// ╔═════════════════════════════════╗
// ║  Moving Averages Revolution     ║
// ║  @Ultr.                         ║
// ╚═════════════════════════════════╝

//@version=5
indicator("Moving Averages Revolution (@Ultr)", shorttitle = "MAs Revo [@Ultr.]", overlay = true)

//  ══════════════
//  ═══  Revo  ═══
//  ═══  Colors  ═══ 

var grpColor = " ═══ Colores ═══ "
colorInit = color.new(#33ffac, 20)      // color Menta
colorSeco = color.new(#eedd45, 20)      // color Amarillo
colorThir = color.new(#e91e63, 20)      // color Rojo
colorFour = color.new(#0034c5, 20)      // color Azul
colorFift = color.new(color.gray, 20)   // color Gris
colorSixt = color.new(color.navy, 20)   // color Violeta

//  ══════════════
//  ═══  Revo  ═══
//  ═══  Inputs  ═══

var grpLong  = " ═══ EMAS ═══ "
eMa4    = input.bool(defval = true, title = "", group = grpLong, inline = 'ema1')
eMa8    = input.bool(defval = true, title = "", group = grpLong, inline = 'ema2')
eMa18   = input.bool(defval = true, title = "", group = grpLong, inline = 'ema3')
eMa55   = input.bool(defval = true, title = "", group = grpLong, inline = 'ema4')
eMa100  = input.bool(defval = true, title = "", group = grpLong, inline = 'ema5')
eMa200  = input.bool(defval = true, title = "", group = grpLong, inline = 'ema6')

leng4    = input(4,    title = "Extensión",  group = grpLong, inline = 'ema1')
leng8    = input(8,    title = "Extensión",  group = grpLong, inline = 'ema2')
leng18   = input(18,   title = "Extensión",  group = grpLong, inline = 'ema3')
leng55   = input(55,   title = "Extensión",  group = grpLong, inline = 'ema4')
leng100  = input(100,  title = "Extensión",  group = grpLong, inline = 'ema5')
leng200  = input(200,  title = "Extensión",  group = grpLong, inline = 'ema6')

//  ══════════════
//  ═══  Revo  ═══
//  ═══  Options  ═══

var grpType  = " ═══ Tipo ═══ "
string optionMa	= input.string("EMA", "Tipo de MA",  options = ["EMA", "SMA", "RMA", "WMA", "VWMA"], group = grpType)

//  ══════════════
//  ═══  Revo  ═══
//  ═══  Functions  ═══

ma(source, length, type) =>
    type == "SMA" ? ta.sma(source, length) :    // Media Movil Simple
     type == "EMA" ? ta.ema(source, length) :   // Media Movil Exponencial
     type == "RMA" ? ta.rma(source, length) :   // Media Movil
     type == "WMA" ? ta.wma(source, length) :   // Media Movil Ponderada
     type == "VWMA" ? ta.vwma(source, length) : // Media Movil Ponderada por volumen
     na

//  ══════════════
//  ═══  Revo  ═══
//  ═══  Instances  ═══

ma4   = ma(close, leng4,  optionMa)
ma8   = ma(close, leng8,  optionMa)
ma18  = ma(close, leng18,  optionMa)
ma55  = ma(close, leng55,   optionMa)
ma100 = ma(close, leng100,  optionMa)
ma200 = ma(close, leng200,  optionMa)

//  ══════════════
//  ═══  Revo  ═══
//  ═══  Display  ═══

plot(eMa4 ? ma4 : na,     color = colorInit, title = "1ra Ema",  linewidth = 2)
plot(eMa8 ? ma8 : na,     color = colorSeco, title = "2da Ema",  linewidth = 2)
plot(eMa18 ? ma18 : na,   color = colorThir, title = "3ra Ema",  linewidth = 2)
plot(eMa55 ? ma55 : na,   color = colorFour, title = "4ta Ema",  linewidth = 2)
plot(eMa100 ? ma100 : na, color = colorFift, title = "5ta Ema",  linewidth = 2)
plot(eMa200 ? ma200 : na, color = colorSixt, title = "6ta Ema",  linewidth = 2)
